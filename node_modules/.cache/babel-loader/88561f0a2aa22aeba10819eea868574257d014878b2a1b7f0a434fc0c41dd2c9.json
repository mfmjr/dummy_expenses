{"ast":null,"code":"var _jsxFileName = \"/home/marcelo/Documentos/GitHub/DEV-FRONT-END/2023 - THE COMPLETE GUIDE REACT/03-starting-setup - useStates/src/components/Expenses/Expenses.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpenseFilter from \"./ExpenseFilter\";\nimport ExpenseList from \"./ExpenseList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Expenses = props => {\n  _s();\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n  let filterInfoText = \"2019, 2021 & 2022\";\n  if (filteredYear === \"2019\") filterInfoText = \"2020, 2021 & 2022\";else if (filteredYear === \"2020\") filterInfoText = \"2019, 2021 & 2022\";else if (filteredYear === \"2021\") filterInfoText = \"2019, 2020 & 2022\";else filterInfoText = \"2019, 2020 & 2021\";\n  const filterChangeHandler = selectYear => {\n    setFilteredYear(selectYear);\n  };\n  const filteredExpenses = props.items.filter(item => item.date.getFullYear().toString() === filteredYear);\n  console.clear();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"expenses\",\n        children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n          selected: filteredYear,\n          onChangeFilter: filterChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ExpenseList, {\n          items: filteredExpenses\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Expenses, \"N/aF5O1Q1Yumn7zBaSWVzvWGO2A=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","Card","ExpenseFilter","ExpenseList","jsxDEV","_jsxDEV","Fragment","_Fragment","Expenses","props","_s","filteredYear","setFilteredYear","filterInfoText","filterChangeHandler","selectYear","filteredExpenses","items","filter","item","date","getFullYear","toString","console","clear","children","className","selected","onChangeFilter","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/marcelo/Documentos/GitHub/DEV-FRONT-END/2023 - THE COMPLETE GUIDE REACT/03-starting-setup - useStates/src/components/Expenses/Expenses.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpenseFilter from \"./ExpenseFilter\";\nimport ExpenseList from \"./ExpenseList\";\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n  let filterInfoText = \"2019, 2021 & 2022\";\n\n  if (filteredYear === \"2019\") filterInfoText = \"2020, 2021 & 2022\";\n  else if (filteredYear === \"2020\") filterInfoText = \"2019, 2021 & 2022\";\n  else if (filteredYear === \"2021\") filterInfoText = \"2019, 2020 & 2022\";\n  else filterInfoText = \"2019, 2020 & 2021\";\n\n  const filterChangeHandler = (selectYear) => {\n    setFilteredYear(selectYear);\n  };\n\n  const filteredExpenses = props.items.filter(\n    (item) => item.date.getFullYear().toString() === filteredYear\n  );\n\n  console.clear();\n  return (\n    < >\n      <li>\n        <Card className=\"expenses\">\n          <ExpenseFilter\n            selected={filteredYear}\n            onChangeFilter={filterChangeHandler}\n          />\n          {/* \n        \n        {props.items.map((expense) => (\n          <ExpenseItem\n            key={expense.id}\n            title={expense.title}\n            amount={expense.amount}\n            date={expense.date}\n          />\n        ))}\n         */}\n          <ExpenseList items={filteredExpenses} />\n        </Card>\n      </li>\n    </>\n  );\n};\n\nexport default Expenses;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gBAAgB;AACvB,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,MAAM,CAAC;EACxD,IAAIa,cAAc,GAAG,mBAAmB;EAExC,IAAIF,YAAY,KAAK,MAAM,EAAEE,cAAc,GAAG,mBAAmB,CAAC,KAC7D,IAAIF,YAAY,KAAK,MAAM,EAAEE,cAAc,GAAG,mBAAmB,CAAC,KAClE,IAAIF,YAAY,KAAK,MAAM,EAAEE,cAAc,GAAG,mBAAmB,CAAC,KAClEA,cAAc,GAAG,mBAAmB;EAEzC,MAAMC,mBAAmB,GAAIC,UAAU,IAAK;IAC1CH,eAAe,CAACG,UAAU,CAAC;EAC7B,CAAC;EAED,MAAMC,gBAAgB,GAAGP,KAAK,CAACQ,KAAK,CAACC,MAAM,CACxCC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,KAAKX,YACnD,CAAC;EAEDY,OAAO,CAACC,KAAK,CAAC,CAAC;EACf,oBACEnB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,eACEpB,OAAA;MAAAoB,QAAA,eACEpB,OAAA,CAACJ,IAAI;QAACyB,SAAS,EAAC,UAAU;QAAAD,QAAA,gBACxBpB,OAAA,CAACH,aAAa;UACZyB,QAAQ,EAAEhB,YAAa;UACvBiB,cAAc,EAAEd;QAAoB;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CAAC,eAYF3B,OAAA,CAACF,WAAW;UAACc,KAAK,EAAED;QAAiB;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBACL,CAAC;AAEP,CAAC;AAACtB,EAAA,CA1CIF,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AA4Cd,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}