{"ast":null,"code":"var _jsxFileName = \"/home/marcelo/Documentos/GitHub/DEV-FRONT-END/2023 - THE COMPLETE GUIDE REACT/03-starting-setup - useStates/src/components/NewExpense/ExpenseForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ExpenseForm = props => {\n  _s();\n  // Using three states\n  const [title, setTitle] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const titleChangeHandler = e => {\n    setTitle(e.target.value);\n  };\n  const amountChangeHandler = e => {\n    setAmount(e.target.value);\n  };\n  const dateChangeHandler = e => {\n    setDate(e.target.value);\n  };\n\n  /*\n  //   Using one state instead of three states\n  const [userInput, setUserInput] = useState({\n    title: \"\",\n    amount: \"\",\n    date: \"\",\n  });\n  */\n\n  /*\n  const titleChangeHandler = (e) => {\n    // Form of updating state when the new state depends on the previous state\n    setUserInput({\n      ...userInput,\n      title: e.target.value,\n    });\n    \n    setUserInput(() => {\n      return { title: e.target.value, ...userInput };\n    });\n  };\n  */\n\n  /*\n  const amountChangeHandler = (e) => {\n    // Form of updating state when the new state depends on the previous state\n    /*\n    setUserInput({\n      ...userInput,\n      date: e.target.value,\n    });\n    \n    \n    setUserInput(() => {\n      return { amount: e.target.value, ...userInput };\n    });\n  };\n  \n  const dateChangeHandler = (e) => {\n    // Form of updating state when the new state depends on the previous state\n    /*\n    setUserInput({\n      ...userInput,\n      amount: e.target.value,\n    });\n    \n    \n    setUserInput(() => {\n      return { date: e.target.value, ...userInput };\n    });\n  };\n  */\n\n  // Using one state instead of three states\n  /*\n  const inputChangeHandler = (identifier, value) => {\n    if (identifier === \"title\") {\n      setTitle(value);\n    } else if (identifier === \"amount\") {\n      setAmount(value);\n    } else {\n      setDate(value);\n    }\n  };\n   */\n  const submitHandler = e => {\n    e.preventDefault();\n    const expenseData = {\n      title: title,\n      amount: amount,\n      date: new Date(date)\n    };\n    setTitle(\"\");\n    setAmount(\"\");\n    setDate(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: title,\n            onChange: titleChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"0.01\",\n            step: \"0.01\",\n            value: amount,\n            onChange: amountChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            min: \"2019-01-01\",\n            max: \"2024-12-31\",\n            value: date,\n            onChange: dateChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(ExpenseForm, \"DE/pEwXzv6vwqTOQLQjNYH/YZbk=\");\n_c = ExpenseForm;\nexport default ExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ExpenseForm","props","_s","title","setTitle","amount","setAmount","date","setDate","titleChangeHandler","e","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","expenseData","Date","children","onSubmit","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","min","step","max","_c","$RefreshReg$"],"sources":["/home/marcelo/Documentos/GitHub/DEV-FRONT-END/2023 - THE COMPLETE GUIDE REACT/03-starting-setup - useStates/src/components/NewExpense/ExpenseForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  // Using three states\n  const [title, setTitle] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n\n  const titleChangeHandler = (e) => {\n    setTitle(e.target.value);\n  };\n\n  const amountChangeHandler = (e) => {\n    setAmount(e.target.value);\n  };\n\n  const dateChangeHandler = (e) => {\n    setDate(e.target.value);\n  };\n\n  /*\n  //   Using one state instead of three states\n  const [userInput, setUserInput] = useState({\n    title: \"\",\n    amount: \"\",\n    date: \"\",\n  });\n  */\n\n  /*\n  const titleChangeHandler = (e) => {\n    // Form of updating state when the new state depends on the previous state\n    setUserInput({\n      ...userInput,\n      title: e.target.value,\n    });\n    \n    setUserInput(() => {\n      return { title: e.target.value, ...userInput };\n    });\n  };\n  */\n\n  /*\n  const amountChangeHandler = (e) => {\n    // Form of updating state when the new state depends on the previous state\n    /*\n    setUserInput({\n      ...userInput,\n      date: e.target.value,\n    });\n    \n    \n    setUserInput(() => {\n      return { amount: e.target.value, ...userInput };\n    });\n  };\n  \n  const dateChangeHandler = (e) => {\n    // Form of updating state when the new state depends on the previous state\n    /*\n    setUserInput({\n      ...userInput,\n      amount: e.target.value,\n    });\n    \n    \n    setUserInput(() => {\n      return { date: e.target.value, ...userInput };\n    });\n  };\n  */\n\n  // Using one state instead of three states\n  /*\n  const inputChangeHandler = (identifier, value) => {\n    if (identifier === \"title\") {\n      setTitle(value);\n    } else if (identifier === \"amount\") {\n      setAmount(value);\n    } else {\n      setDate(value);\n    }\n  };\n\n  */\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    const expenseData = {\n      title: title,\n      amount: amount,\n      date: new Date(date),\n    };\n     setTitle(\"\");\n    setAmount(\"\");\n    setDate(\"\");\n  };\n\n  return (\n    <>\n      <form onSubmit={submitHandler}>\n        <div className=\"new-expense__controls\">\n          <div className=\"new-expense__control\">\n            <label htmlFor=\"\">Title</label>\n            <input type=\"text\" value={title} onChange={titleChangeHandler} />\n          </div>\n          <div className=\"new-expense__control\">\n            <label htmlFor=\"\">Amount</label>\n            <input\n              type=\"number\"\n              min=\"0.01\"\n              step=\"0.01\"\n              value={amount}\n              onChange={amountChangeHandler}\n            />\n          </div>\n          <div className=\"new-expense__control\">\n            <label htmlFor=\"\">Date</label>\n            <input\n              type=\"date\"\n              min=\"2019-01-01\"\n              max=\"2024-12-31\"\n              value={date}\n              onChange={dateChangeHandler}\n            />\n          </div>\n        </div>\n        <div className=\"new-expense__actions\">\n          <button type=\"submit\">Add Expense</button>\n        </div>\n      </form>\n\n      {/* Other form - Ellegant */}\n      {/*       \n      <form>\n        <div className=\"new-expense__controls\">\n          <div className=\"new-expense__control\">\n            <label htmlFor=\"\">Title</label>\n            <input\n              type=\"text\"\n              onChange={(e) => inputChangeHandler(\"title\", e.target.value)}\n            />\n          </div>\n          <div className=\"new-expense__control\">\n            <label htmlFor=\"\">Amount</label>\n            <input\n              type=\"number\"\n              min=\"0.01\"\n              step=\"0.01\"\n              onChange={(e) => inputChangeHandler(\"amount\", e.target.value)}\n            />\n          </div>\n          <div className=\"new-expense__control\">\n            <label htmlFor=\"\">Date</label>\n            <input\n              type=\"date\"\n              min=\"2019-01-01\"\n              max=\"2024-12-31\"\n              onChange={(e) => inputChangeHandler(\"date\", e.target.value)}\n            />\n          </div>\n        </div>\n        <div className=\"new-expense__actions\">\n          <button type=\"submit\">Add Expense</button>\n        </div>\n      </form>\n       */}\n    </>\n  );\n};\n\nexport default ExpenseForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3B,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMc,kBAAkB,GAAIC,CAAC,IAAK;IAChCN,QAAQ,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMC,mBAAmB,GAAIH,CAAC,IAAK;IACjCJ,SAAS,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC3B,CAAC;EAED,MAAME,iBAAiB,GAAIJ,CAAC,IAAK;IAC/BF,OAAO,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACzB,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEE,MAAMG,aAAa,GAAIL,CAAC,IAAK;IAC3BA,CAAC,CAACM,cAAc,CAAC,CAAC;IAElB,MAAMC,WAAW,GAAG;MAClBd,KAAK,EAAEA,KAAK;MACZE,MAAM,EAAEA,MAAM;MACdE,IAAI,EAAE,IAAIW,IAAI,CAACX,IAAI;IACrB,CAAC;IACAH,QAAQ,CAAC,EAAE,CAAC;IACbE,SAAS,CAAC,EAAE,CAAC;IACbE,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;EAED,oBACEX,OAAA,CAAAE,SAAA;IAAAoB,QAAA,eACEtB,OAAA;MAAMuB,QAAQ,EAAEL,aAAc;MAAAI,QAAA,gBAC5BtB,OAAA;QAAKwB,SAAS,EAAC,uBAAuB;QAAAF,QAAA,gBACpCtB,OAAA;UAAKwB,SAAS,EAAC,sBAAsB;UAAAF,QAAA,gBACnCtB,OAAA;YAAOyB,OAAO,EAAC,EAAE;YAAAH,QAAA,EAAC;UAAK;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC/B7B,OAAA;YAAO8B,IAAI,EAAC,MAAM;YAACf,KAAK,EAAET,KAAM;YAACyB,QAAQ,EAAEnB;UAAmB;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9D,CAAC,eACN7B,OAAA;UAAKwB,SAAS,EAAC,sBAAsB;UAAAF,QAAA,gBACnCtB,OAAA;YAAOyB,OAAO,EAAC,EAAE;YAAAH,QAAA,EAAC;UAAM;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAChC7B,OAAA;YACE8B,IAAI,EAAC,QAAQ;YACbE,GAAG,EAAC,MAAM;YACVC,IAAI,EAAC,MAAM;YACXlB,KAAK,EAAEP,MAAO;YACduB,QAAQ,EAAEf;UAAoB;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN7B,OAAA;UAAKwB,SAAS,EAAC,sBAAsB;UAAAF,QAAA,gBACnCtB,OAAA;YAAOyB,OAAO,EAAC,EAAE;YAAAH,QAAA,EAAC;UAAI;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC9B7B,OAAA;YACE8B,IAAI,EAAC,MAAM;YACXE,GAAG,EAAC,YAAY;YAChBE,GAAG,EAAC,YAAY;YAChBnB,KAAK,EAAEL,IAAK;YACZqB,QAAQ,EAAEd;UAAkB;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACN7B,OAAA;QAAKwB,SAAS,EAAC,sBAAsB;QAAAF,QAAA,eACnCtB,OAAA;UAAQ8B,IAAI,EAAC,QAAQ;UAAAR,QAAA,EAAC;QAAW;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC,gBAqCP,CAAC;AAEP,CAAC;AAACxB,EAAA,CAxKIF,WAAW;AAAAgC,EAAA,GAAXhC,WAAW;AA0KjB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}